apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deployment
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          effect: "NoExecute"
          tolerationSeconds: 0
      containers:
        - name: pihole
          image: pihole/pihole:2024.07.0
          ports:
            - containerPort: 53
              name: dns-udp
              protocol: UDP

            - containerPort: 53
              name: dns-tcp
              protocol: TCP

            - containerPort: 67
            - containerPort: 80
          env:
            - name: TZ
              value: "Europe/London"
            - name: WEBPASSWORD
              value: "password"
            - name: VIRTUAL_HOST
              value: "kube.pihole.lan"
          volumeMounts:
            - name: pihole-storage
              mountPath: /etc/pihole
            - name: dnsmasq-storage
              mountPath: /etc/dnsmasq.d
      volumes:
        - name: pihole-storage
          persistentVolumeClaim:
            claimName: pihole-pvc
        - name: dnsmasq-storage
          persistentVolumeClaim:
            claimName: pihole-dnsmasq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-service
spec:
  selector:
    app: pihole
  ports:
    - name: dns-udp
      protocol: UDP
      port: 53
      targetPort: 53

    - name: dns-tcp
      protocol: TCP
      port: 53
      targetPort: 53

  externalTrafficPolicy: Local

  type: LoadBalancer
  loadBalancerIP: 10.128.100.211

---
apiVersion: v1
kind: Service
metadata:
  name: pihole-service-internal
spec:
  selector:
    app: pihole
  ports:
    - protocol: TCP
      name: webui
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pihole-pv
  labels:
    type: pihole-storage
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /mnt/user/Temp/pihole/data
    server: fern.lan
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pihole-dnsmasq-pv
  labels:
    type: pihole-dnsmasq-storage
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /mnt/user/Temp/pihole/dnsmasq.d
    server: fern.lan
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      type: pihole-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      type: pihole-dnsmasq-storage
