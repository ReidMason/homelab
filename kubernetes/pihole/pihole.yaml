apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      hostname: pihole
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          effect: "NoExecute"
          tolerationSeconds: 0
      containers:
        - name: pihole
          image: pihole/pihole:2024.07.0
          ports:
            - containerPort: 53
              name: dns-udp
              protocol: UDP

            - containerPort: 53
              name: dns-tcp
              protocol: TCP

            - containerPort: 67
            - containerPort: 80
          env:
            - name: PIHOLE_UID
              value: "65534"
            - name: PIHOLE_GID
              value: "65534"
            - name: TZ
              value: "Europe/London"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pihole-secret
                  key: webui-password
          volumeMounts:
            - name: pihole-storage
              mountPath: /etc/pihole
              subPath: data
            - name: pihole-storage
              mountPath: /etc/dnsmasq.d
              subPath: dnsmasq.d
      volumes:
        - name: pihole-storage
          persistentVolumeClaim:
            claimName: pihole-pvc
---
apiVersion: v1
kind: Service
metadata:
  namespace: pihole
  name: pihole-dns
  annotations:
    metallb.universe.tf/loadBalancerIPs: 10.128.0.71
spec:
  selector:
    app: pihole
  ports:
    - name: dns-udp
      protocol: UDP
      port: 53
      targetPort: 53

    - name: dns-tcp
      protocol: TCP
      port: 53
      targetPort: 53

  externalTrafficPolicy: Local

  type: LoadBalancer
  loadBalancerIP: 10.128.0.71

---
apiVersion: v1
kind: Service
metadata:
  namespace: pihole
  name: pihole-dashboard
spec:
  selector:
    app: pihole
  ports:
    - protocol: TCP
      name: webui
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: pihole
  name: pihole-pv
  labels:
    type: pihole-storage
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /mnt/user/Temp/pihole
    server: fern.lan
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: pihole
  name: pihole-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      type: pihole-storage
